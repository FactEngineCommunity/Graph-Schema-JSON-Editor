<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>